swagger: '2.0'
info:
  version: 1.0.0
  title: 'Geodatastore API v1 Documentation'
  description: |
    Geodatastore is a project of PDOK that facilitates governments to publish geospatial open datasets. 
    A user is facilitated in uploading a dataset and provide some metadata, the metadata is then decorated 
    serverside to meet national profile requirements. Typical api workflow; authentication using basic auth, 
    retrieve datasets, to see which datasets are already uploaded by user. Upload dataset (and update dataset). 
    If all properties are provided the dataset can be published. Remove dataset. After publication, it can take 
    up to 24 hours before the dataset will be available in http://www.nationaalgeoregister.nl and up to 48 hours 
    in http://data.overheid.nl. Visit the PDOK forum at https://www.pdok.nl/forum for additional information 
    about Geodatastore API development.
schemes:
  - https
securityDefinitions:
  basicAuth:
    type: basic
    description: Users can login with basic authentication using their nationaalgeoregister account
paths:
  /api/v1/datasets:
    get:
      description: |
        Gets `dataset` objects.
        Optional query params of **q**, **pageSize**, **sortOrder**, **sortBy** determines filter,
        size and order of returned array
        The status parameter indicates if datasets that are publised or draft are returned.
      security:
       - basicAuth: []
      parameters:
        - name: q
          in: query
          description: a filter used in query
          required: false
          type: string
        - name: sortBy
          in: query
          description: an attribute to use as sort order
          required: false
          type: string
          default: lastModified
          enum: ["title","lastModified"]
        - name: sortOrder
          in: query
          description: order of sort
          required: false
          type: string
          default: Asc
          enum: ["Asc","Desc"]
        - name: pageSize
          in: query
          description: Size of array
          required: false
          type: integer
        - name: status
          in: query
          description: Indicate to filter aither published of non published
          required: false
          default: published
          type: string
          enum: ["published","draft"]
      responses:
        '200':
          description: Successful response
          schema:
            title: ArrayOfDatasets
            type: array
            items:
                $ref: "#/definitions/dataset"
        '405':
          description: Invalid input  
          schema: 
            title: Message
            type: string
  /api/v1/dataset:
    post:
      description: |
        Create a new dataset
      security:
       - basicAuth: []
      operationId: addDataset
      produces:
        - application/json
      parameters:  
        - in: formData
          name: title
          description: Title of the dataset
          type: string
        - in: formData
          name: summary
          description: Summary describing the dataset
          type: string
        - in: formData
          name: keywords
          description: Keywords describing the dataset
          type: array
          items: 
            type: string
        - in: formData
          name: lineage
          description: Lineage information on how the dataset has been created/collected
          type: string
        - in: formData
          name: license
          description: License under which te dataset is made available. Should be a URI of one of /api/v1/registry/licenses.
          type: string
        - in: formData
          name: resolution
          description: The resolution (scale) in which this dataset is best used. Should be a URI of one of /api/v1/registry/resolutions.
          type: string
        - in: formData
          name: locationUri
          description: The location of the dataset. Should be a URI of one of /api/v1/registry/locations.
          type: string
        - in: formData
          name: publish
          type: boolean
          description: This flag indicates if the dataset should be instantly published or saved as draft.
        - in: formData
          name: topicCategory
          description: The topic of the dataset. Should be a URI of one of /api/v1/registry/topicCategories.
          type: array
          items: 
            type: string
        - in: formData
          name: dataset
          description: The dataset file
          type: file
        - in: formData
          name: thumbnail
          description: A thumbnail file
          type: file
      responses:
        '200':
          description: Successful response
          schema:
            $ref: "#/definitions/dataset"
        '405':
          description: Invalid input    
  /api/v1/dataset/{id}:
    get:
      description: |
        Get `dataset` object.
      security:
       - basicAuth: []
      parameters:
        - name: id
          in: path
          description: the id of the Dataset
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: "#/definitions/dataset"
        '404':
          description: Dataset does not exist or no privileges
          schema: 
            title: Message
            type: string
        '405':
          description: Invalid input  
          schema: 
            title: Message
            type: string
    post:
      description: |
        Update a dataset
      security:
       - basicAuth: []
      operationId: updateDataset
      produces:
        - application/json
      parameters: 
        - name: id
          in: path
          description: Identifier of the dataset
          required: true
          type: string
        - in: formData
          name: title
          description: Title of the dataset
          type: string
        - in: formData
          name: summary
          description: Summary describing the dataset
          type: string
        - in: formData
          name: keywords
          description: Keywords describing the dataset
          type: array
          items: 
            type: string
        - in: formData
          name: lineage
          description: Lineage information on how the dataset has been created/collected
          type: string
        - in: formData
          name: license
          description: License under which te dataset is made available. Should be a URI of one of /api/v1/registry/license.
          type: string
        - in: formData
          name: resolution
          description: The resolution (scale) in which this dataset is best used. Should be a URI of one of /api/v1/registry/denominator.
          type: string
        - in: formData
          name: locationUri
          description: The location of the dataset. Should be a URI of one of /api/v1/registry/locations.
          type: string
        - in: formData
          name: publish
          type: boolean
          description: This flag indicates if the dataset should be instantly published or saved as draft.
        - in: formData
          name: topicCategory
          description: The topic of the dataset. Should be a URI of one of /api/v1/registry/topicCategory.
          type: array
          items: 
            type: string
        - in: formData
          name: dataset
          description: The dataset file
          type: file
        - in: formData
          name: thumbnail
          description: A thumbnail file
          type: file
      responses:
        '200':
          description: Successful response
          schema:
            $ref: "#/definitions/dataset"
        '405':
          description: Invalid input 
          schema: 
            title: Message
            type: string
    delete:
      description: delete a dataset
      security:
       - basicAuth: []
      operationId: deleteDataset
      parameters:  
        - name: id
          in: path
          description: the id of the Dataset
          required: true
          type: string
      responses:
        '200':
          description: Successful response      
        '404':
          description: Dataset not found 
  /api/v1/registries:
    get:
      description: |
        Gets `registry` objects.
	  produces:	
		- text/xml
		- application/json
      responses:
        '200':
          description: Successful response
          schema:
            title: ArrayOfRegistry
            type: array
            items:
              title: Registry
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string            
  /api/v1/registry/location:
    get:
      description: |
        Gets `location` objects.
        Optional query param of **pageSize** and **q** determines
        size of returned array
	  produces:
	    - text/xml
		- application/json
      parameters:
        - name: q
          in: query
          description: A filter used in query
          required: false
          type: string
        - name: pageSize
          in: query
          description: Size of array
          required: false
          type: integer
      responses:
        '200':
          description: Successful response
          schema:
            title: Array of keywords
            type: array
            items:
              title: Keyword
              type: object
              properties:
                uri:
                  type: string
                label:
                  type: string
                bounds:
                  type: array
                  items: 
                    type: number
                  maxItems: 4
                  minItems: 4
        '404':
          description: Registry does not exist
          schema: 
            title: Message
            type: string
  /api/v1/registry/{name}:
    get:
      description: |
        Gets `keyword` objects.
	  produces:
	    - text/xml
		- application/json
      parameters:
        - name: name
          in: path
          description: The name of the Registry
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            title: Array of keywords
            type: array
            items:
              title: Keyword
              type: object
              properties:
                uri:
                  type: string
                label:
                  type: string
                bounds:
                  type: array
                  items: 
                    type: number
                  maxItems: 4
                  minItems: 4
        '404':
          description: Registry does not exist
          schema: 
            title: Message
            type: string
definitions:
  dataset:
    type: object
    properties:
      identifier:
        type: string
        description: Identifier of dataset
      title:
        type: string
        description: title of the dataset
      summary:
        type: string
        description: summary of te dataset
      keywords:
        type: array
        description: keywords that describe the dataset
        items: 
          type: string
      lineage:
        type: string
        description: Information about dataset creation/collection
      license:
        type: string
        description: License under which the dataset is made available
      resolution:
        type: string
        description: Resolution for which the dataset is optimal
      locationUri:
        type: string
        description: URI of a location of the dataset
      extent:
        type: array
        description: The geographical extent (box) of the location of the dataset
        items: 
          type: number
        maxItems: 4
        minItems: 4
      location:
        description: The label of the location
        type: string
      publish:
        type: boolean
        description: indicates if user tried to publish, and if publish succeeded
      topicCategories:
        type: array
        description: the topic of the dataset
        items: 
          type: string
      valid: 
        type: boolean
        description: indication if all required properties are filled and the dataset can be published
      status:
        type: string
        enum: ["published","draft"]
        description: true if this file has been previously published
      error:
        type: boolean
        description: true if an error occured while processing the request
      messages:
        type: array
        items:
          type: string
        description: if an error occured, this property has additional info about the error
      fileName:
        type: string
        description: the fileName of the uploaded dataset
      thumbnailUri:
        type: string
        description: url of the thumbnail
      changeDate:
        type: string
        format: date
        description: date of latest change of the metadata
      publishDate:
        type: string
        format: date-time
        description: date of publication of the metadata
    
